// =========== Mixins

// Animations
// Example: .element { @include animation(keyframe-name, 500ms, default); }
.mixin-animation (@name: true, @duration: true, @timing_function: true, @delay: false, @iteration_count: false, @direction: false) {
    @name { -webkit-animation-name: @name; -moz-animation-name: @name; -ms-animation-name: @name; }
    @duration { -webkit-animation-duration: @duration; -moz-animation-duration: @duration; -ms-animation-duration: @duration; }
    @timing_function { -webkit-animation-timing-function: @timing_function; -moz-animation-timing-function: @timing_function;  -ms-animation-timing-function: @timing_function; }
    @delay { -webkit-animation-delay: @delay; -moz-animation-delay: @delay; -ms-animation-delay: @delay; }
    @iteration_count { -webkit-animation-iteration-count: @iteration_count; -moz-animation-iteration-count: @iteration_count; -ms-animation-iteration-count: @iteration_count; }
    @direction { -webkit-animation-direction: @direction; -moz-animation-direction: @direction; -ms-animation-direction: @direction; }
}

// Backface-visibility
// Example: .element { .mixin-backface-visibility(hidden); }
.mixin-backface-visibility(@backface) {
    -webkit-backface-visibility: @backface;
    -moz-backface-visibility: @backface;
    -ms-backface-visibility: @backface;
    backface-visibility: @backface;
}

// Border-radius
// Example: .element { .mixin-border-radius(@border-radius); }
.mixin-border-radius(@radius) {
    border-radius: @radius;
    background-clip: padding-box;
}

// Box-sizing
// Example: .element { .mixin-box-sizing(border-box); }
.mixin-box-sizing(@box) {
    -webkit-box-sizing: @box;
    -moz-box-sizing: @box;
    box-sizing: @box;
}

// Media queries
// Example: .mixin-breakpoint(@breakpoint-two) { your properties }
/*.mixin-breakpoint(@breakpoint) {
    @media (@breakpoint-property: @breakpoint / @font-size +em) {
        @content;
    }
}*/
// Doesn't exist in new Taiga (15-11-2013) 
.mixin-breakpoint(@point) when (@point = one) {
    @media only screen and (min-width: @breakpoint-one) { @content; }
}
.mixin-breakpoint(@point) when (@point = two) {
    @media only screen and (min-width: @breakpoint-two) { @content; }
}
.mixin-breakpoint(@point) when (@point = three) {
    @media only screen and (min-width: @breakpoint-three) { @content; }
}

// Filters
// Example: .element { .mixin-filter(grayscale(50%)); }
.mixin-filter(@filter) {
    -webkit-filter: @filter;
    -moz-filter: @filter;
    -o-filter: @filter;
    filter: @filter;
}

// Retina image
// Example: .element { .mixin-image-2x("logo2x.png", 2em, 1em); }
.mixin-retina(@image, @width, @height) {
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        background-image: url(@image);
        background-size: @width @height;
    }
}

// Perspective
// Example: .element { @include perspective(1000); }
.mixin-perspective(@perspective) {
    -webkit-perspective: @perspective;
    -moz-perspective: @perspective;
    perspective: @perspective;
}

// Transform
// Example: .element { .mixin-transform(translateX(1em)); }
.mixin-transform(@transform) {
    -webkit-transform: @transform;
    transform: @transform;
}

// Transition
// Example: .element { .mixin-transition(background 500ms ease-in); }
.mixin-transition(@transition) {
    -webkit-transition: @transition;
    transition: @transition;
}

// Columns
// Example: .element { .mixin-columns(2, 1em)); }
.mixin-columns(@count, @gap) {
    -webkit-column-count: @count;
    -webkit-column-gap : @gap;
    -moz-column-count: @count;
    -moz-column-gap: @gap;
    column-count: @count;
    column-gap: @gap;
}

// Column rule
// Example: .element { .mixin-column-rule(1px, solid, #000); }
.mixin-columns-rule(@size, @style, @color) {
    -webkit-column-rule-width: @size;
    -webkit-column-rule-style: @style;
    -webkit-column-rule-color: @color;
    -moz-column-rule-width: @size;
    -moz-column-rule-style: @style;
    -moz-column-rule-color: @color;
    column-rule-width: @size;
    column-rule-style: @style;
    column-rule-color: @color;
}

// Gradient
// Example: .element { .mixin-gradient(top, #000, #fff); }
.mixin-gradient(@side, @start, @end) {
    background-color: @end;
    background-image: -webkit-linear-gradient(@side, @start, @end);
    background-image: -moz-linear-gradient(@side, @start, @end);
    background-image: linear-gradient(@side, @start, @end);
}

.mixin-gradient-ie(@start, @end) {
    *zoom: 1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{@start}', endColorstr='#{@end}');
    -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{@start}', endColorstr='#{@end}');
}